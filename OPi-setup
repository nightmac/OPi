#!/bin/bash

DIR=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )

export USERHOME=$(sudo -u $SUDO_USER -H bash -c 'echo $HOME')

if [ "$(whoami)" != "root" ]; then
	echo "This script needs to be run with sudo. Exiting now."
	exit 1
fi

sudo apt update
sudo apt -y full-upgrade
sudo apt -y purge unattended-upgrades

echo "Installing Synaptic"
sudo apt -y install synaptic software-properties-common

echo "Installing Flatpak"
sudo apt -y install flatpak
sudo apt -y install gnome-software-plugin-flatpak
sudo flatpak remote-add --if-not-exists flathub https://dl.flathub.org/repo/flathub.flatpakrepo

echo "Installing dotfiles"
cp "$DIR/zshrc" $USERHOME/.zshrc
cp "$DIR/inputrc" $USERHOME/.inputrc
sudo install -m 440 "$DIR/010_orangepi-nopasswd" "${ROOTFS_DIR}/etc/sudoers.d/"

echo "Installing Oh-my-zsh"
sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" "" --unattended --keep-zshrc

sudo usermod -a -G dialout $SUDO_USER
sudo apt -y remove brltty
sudo apt -y remove modemmanager
sudo apt -y install avahi-daemon
sudo apt -y install libnss-mdns
sudo apt -y install iperf3
sudo apt -y install xfce4-goodies indicator-multiload
sudo apt -y install gnome-keyring
sudo apt -y install breeze-icon-theme

echo "Configuring Ethernet"
nmcli connection add type ethernet ifname eth0 con-name "Ethernet" autoconnect yes
nmcli connection modify "Ethernet" connection.autoconnect-priority 2
nmcli connection modify "Ethernet" ipv4.dhcp-timeout 5
nmcli connection modify "Ethernet" ipv4.may-fail no
nmcli connection modify "Ethernet" connection.autoconnect-retries 2
nmcli connection modify "Ethernet" connection.auth-retries 2

echo "Configuring Link Local Ethernet for direct connecting in the field"
nmcli connection add type ethernet ifname eth0 con-name "Link Local Ethernet" autoconnect yes
nmcli connection modify "Link Local Ethernet" connection.autoconnect-priority 1

echo "Setting up Wi-Fi Hotspot"
nmcli connection add type wifi ifname '*' con-name "HotSpot" autoconnect yes ssid "OPi5 Max"
nmcli connection modify "HotSpot" 802-11-wireless.mode ap 802-11-wireless.band a ipv4.method shared
nmcli connection modify "HotSpot" connection.autoconnect-priority -5

##################
sudo --preserve-env bash -c ' cat > /etc/NetworkManager/conf.d/wifi-enable-autohotspot.conf' <<- EOF
[connection-wifi]
match-device=interface-name:wlan0
ipv4.dhcp-timeout=30
ipv4.may-fail=no
connection.auth-retries=2
connection.autoconnect-retries=2
EOF
##################

# Uncomment next lines to install realtek RTL8156 (r8152) USB 2.5G ethernet driver 
#sudo add-apt-repository ppa:awesometic/ppa -y
#sudo apt -y install realtek-r8152-dkms

echo "Setting up File Sharing"
sudo apt -y install samba samba-common-bin

if [ ! -f /etc/samba/smb.conf ]
then
	sudo mkdir -p /etc/samba/
##################
sudo --preserve-env bash -c 'cat > /etc/samba/smb.conf' <<- EOF
[global]
   workgroup = WORKGROUP
   server string = Samba Server
   server role = standalone server
   obey pam restrictions = yes
   unix password sync = yes
   log file = /var/log/samba/log.%m
   max log size = 50
   passwd program = /usr/bin/passwd %u
   passwd chat = *Enter\snew\s*\spassword:* %n\n *Retype\snew\s*\spassword:* %n\n *password\supdated\ssuccessfully* .
   pam password change = yes
   map to guest = bad user
   usershare allow guests = yes
   fruit:copyfile = yes
[$SUDO_USER]
   comment = $SUDO_USER Home
   path = /home/$SUDO_USER
   browseable = yes
   writeable = yes
   read only = no
   valid users = $SUDO_USER
EOF
##################
fi

if [ -z "$(sudo pdbedit -L | grep $SUDO_USER)" ]
then
	sudo smbpasswd -a $SUDO_USER
	sudo adduser $SUDO_USER sambashare
fi

echo "Installing x11vnc"
sudo apt -y install x11vnc
sudo x11vnc -storepasswd /etc/x11vnc.pass

######################
sudo --preserve-env bash -c 'cat > /lib/systemd/system/x11vnc.service' << EOF
[Unit]
Description=Start x11vnc at startup.
After=multi-user.target

[Service]
Type=simple
ExecStart=/usr/bin/x11vnc -auth guess -avahi -forever -loop -noxdamage -repeat -rfbauth /etc/x11vnc.pass -rfbport 5900 -shared

[Install]
WantedBy=multi-user.target
EOF
######################

sudo systemctl daemon-reload
sudo systemctl enable x11vnc.service
sudo systemctl start x11vnc.service

echo "Installing python3"
sudo apt -y install python3-pip
sudo apt -y install python3-dev
sudo apt -y install python3-setuptools
sudo apt -y install python-dev-is-python3
sudo pip3 install setuptools --upgrade
sudo pip3 install wheel

echo "Installing iPhone USB Tethering"
sudo apt -y install ipheth-utils usbmuxd libimobiledevice-dev libimobiledevice-utils

echo "Installing VirtualHere USB Server"
curl https://raw.githubusercontent.com/virtualhere/script/main/install_server | sudo sh

echo "Installing uhubctl USB power control"
sudo apt -y install libusb-1.0-0-dev
cd ~/Desktop
git clone https://github.com/mvp/uhubctl && cd uhubctl
make && sudo make install

echo "Installing INDI and KStars"
sudo apt-add-repository ppa:mutlaqja/ppa -y
sudo apt update
sudo apt -y install indi-full kstars-bleeding

echo "Installing pyindi-client"
sudo apt -y install libindi-dev swig libcfitsio-dev libnova-dev
sudo apt -y install python3-indi-client

echo "Installing Astronomy.net"
sudo apt -y install astrometry.net

echo "Installing INDI web manager"
sudo pip3 install indiweb

######################
sudo --preserve-env bash -c 'cat > /etc/systemd/system/indiwebmanager.service' << EOF
[Unit]
Description=INDI Web Manager
After=multi-user.target

[Service]
Type=idle
# MUST SET YOUR USERNAME HERE.
User=$SUDO_USER
ExecStart=/usr/local/bin/indi-web -v
Restart=always
RestartSec=5

[Install]
WantedBy=multi-user.target
EOF
######################

sudo systemctl daemon-reload
sudo systemctl enable indiwebmanager.service
sudo systemctl start indiwebmanager.service

echo "Installing Indigo"
sudo apt -y install build-essential autoconf autotools-dev libtool cmake libudev-dev libavahi-compat-libdnssd-dev libusb-1.0-0-dev fxload libcurl4-gnutls-dev libgphoto2-dev libz-dev git curl
sudo sh -c "echo 'deb [trusted=yes] https://indigo-astronomy.github.io/indigo_ppa/ppa indigo main' > /etc/apt/sources.list.d/indigo.list"
sudo apt update
sudo apt -y install indigo
sudo apt -y install ain-imager
sudo apt -y install indigo-control-panel

echo "Installing PHD2"
sudo apt-add-repository ppa:pch/phd2 -y
sudo apt update
sudo apt -y install phd2 phdlogview

echo "Installing Siril"
sudo add-apt-repository ppa:lock042/siril -y
sudo apt update
sudo apt -y install siril
